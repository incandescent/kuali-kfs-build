# This file contains generic values for the KFS configuration which will allow for
# runtime configuration of a single KFS build.
# To use this file, the following property should be passed on the Ant command line
# to specify the use of this file during build: 
# -Dshared.external.build.properties=../generic-kfs-build.properties

####

base.kfs.rice.override.spring.files=spring-kfs-rice-overrides.xml,classpath*:com/incandescent/kuali/kfs/kfs-rice-*-override.xml

# This is a custom Spring context that we add to the KFSConfigurer module that is injected into Rice
# All KFS module customizations should be included by this root file
# (Rice now merges module contexts, so this parameter and rice override spring files are ultimately combined)
institution.spring.source.files=,com/incandescent/kuali/kfs/kfs-configurer-*-override.xml

# the institution specific files that define the struts context for the application
institution.struts.config.files=

# the institution specific files containing user messages that will be displayed via struts tags in jsps
#institution.struts.message.resources=,YourApplicationResources
institution.struts.message.resources=

institution.rice.struts.message.resources=

# the institution specific classes that wrap java constants for jsps and tags (see ApplicationInitializeListener)
institution.jstl.constants.classnames=

# the institution specific javascript files that should be available to every non-portal page in the application
institution.javascript.files=

# the institution specific javascript files that should be available in the portal
institution.portal.javascript.files=

# additional css files that should be available to every non-portal page in the application
institution.css.files=

# the institution specific css files that should be available to every non-portal page in the application
institution.portal.css.files=

##### build/properties/directory.properties
#
# this is required for dist-external. apparently it's not first created by Ant, so it should
# be a directory that exists prior to running dist-external
deploy.working.directory=.
base.directory=../java
# These two are derived from the above
#drivers.directory=${base.directory}/drivers
# determines where the build will look for your tomcat application server
#appserver.home=${base.directory}/servers/apache-tomcat-5.5.16

## these properties are used for bypassing sections of clean and filter targets
do.filter.project.help=true
#dont.filter.project.rice
#dont.filter.project.spring.ide
#dont.clean.local.work